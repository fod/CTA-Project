@book{cormen01,
  abstract = {The book covers a broad range of algorithms in depth, yet makes their design and analysis acessible to all levels of readers. Each chapter is relatively self-contained and can be used as a unit of study. The algorithms are described in English and in a pseudocode designed to be readable by anyone who has done a little programming. The explanations have been kept elementary without sacrificing depth of coverage or mathematical rigor.},
  added-at = {2016-11-02T13:28:03.000+0100},
  address = {Cambridge, MA},
  author = {Cormen, Thomas H. and Leiserson, Charles E. and Rivest, Ronald L. and Stein, Clifford},
  biburl = {https://www.bibsonomy.org/bibtex/2225d42638921bee01b4ac8ff991b0a6a/ytyoun},
  edition = {Second},
  interhash = {dcdeb0ec50a6798abf1724056982b543},
  intrahash = {225d42638921bee01b4ac8ff991b0a6a},
  isbn = {9780262531962},
  keywords = {aks algorithm clrs gadget no.pdf np-hardness quicksort shellsort sorting sorting.network textbook},
  publisher = {MIT Press},
  refid = {46792720},
  timestamp = {2017-06-15T02:34:29.000+0200},
  title = {Introduction to Algorithms},
  year = 2001
}

@article{Sedgewick-1977,
 doi       = {10.1007/bf00289467},
 title     = {The analysis of Quicksort programs},
 author    = {Robert Sedgewick},
 publisher = {Springer-Verlag},
 journal   = {Acta Informatica},
 issn      = {0001-5903,1432-0525},
 year      = {1977},
 volume    = {7},
 issue     = {4},
 pages     = {327--355},
 url       = {http://doi.org/10.1007/bf00289467}
}

@article{Sedgewick-1978,
 doi       = {10.1145/359619.359631},
 title     = {Implementing Quicksort programs},
 author    = {Sedgewick, Robert},
 publisher = {Association for Computing Machinery},
 journal   = {Communications of the ACM},
 issn      = {0001-0782},
 year      = {1978},
 volume    = {21},
 issue     = {10},
 pages     = {847--857},
 url       = {http://doi.org/10.1145/359619.359631}
}

@book{martelli2002,
   title =     {Python Cookbook},
   author =    {Alex Martelli, David Ascher},
   publisher = {O Reilly},
   isbn =      {9780596001674,0596001673},
   year =      {2002},
   series =    {},
   edition =   {1},
   volume =    {},
   url =       {}
}


@suppbook{peters2002,
  author     = {Tim Peters},
  title      = {Introduction to Algorithms Chapter},
  bookauthor = {Alex Martelli, David Ascher},
  booktitle  = {Python Cookbook},
  publisher  = {O Reilly},
  series     = {SF Masterworks},
  year       = {2002},
  pages      = {621-624},
}

 @misc{enwiki:997404113,
    author = "{Wikipedia contributors}",
    title = "Timsort --- {Wikipedia}{,} The Free Encyclopedia",
    year = "2020",
    url = "https://en.wikipedia.org/w/index.php?title=Timsort&oldid=997404113",
    note = "[Online; accessed 9-May-2021]"
  }

  @misc{woltmann20:insertion,
  author = {Sven Woltmann},
  title = "Insertion Sort - Algorithm, Source Code, Time Complexity",
  year = 2020,
  url = {https://www.happycoders.eu/algorithms/insertion-sort/},
  urldate = {2021-05-10}
}

  @misc{woltmann20:counting,
  author = {Sven Woltmann},
  title = "Counting Sort – Algorithm, Source Code, Time Complexity",
  year = 2020,
  url = {https://www.happycoders.eu/algorithms/counting-sort/},
  urldate = {2021-05-10}
}


@book{heineman2016algorithms,
  title={Algorithms in a Nutshell},
  author={Heineman, G.T. and Pollice, G. and Selkow, S.},
  isbn={9781491948927},
  lccn={2016498633},
  series={In a nutshell},
  url={https://books.google.ie/books?id=95zVsgEACAAJ},
  year={2016},
  publisher={O'Reilly}
}

@book{bentley:pearls,
  author = {Bentley, Jon},
  title = {Programming Pearls (2nd Ed.)},
  year = {1999},
  isbn = {0201657880},
  publisher = {ACM Press/Addison-Wesley Publishing Co.},
  address = {USA}
}

@article{musser1997,
author = {Musser, David R.},
title = {Introspective Sorting and Selection Algorithms},
journal = {Software: Practice and Experience},
volume = {27},
number = {8},
pages = {983-993},
keywords = {quicksort, heapsort, sorting algorithms, introspective algorithms, hybrid algorithms, generic algorithms, STL},
doi = {https://doi.org/10.1002/(SICI)1097-024X(199708)27:8},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/%28SICI%291097-024X%28199708%2927%3A8%3C983%3A%3AAID-SPE117%3E3.0.CO%3B2-%23},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/%28SICI%291097-024X%28199708%2927%3A8%3C983%3A%3AAID-SPE117%3E3.0.CO%3B2-%23},
abstract = {Abstract Quicksort is the preferred in-place sorting algorithm in many contexts, since its average computing time on uniformly distributed inputs is Θ(N log N), and it is in fact faster than most other sorting algorithms on most inputs. Its drawback is that its worst-case time bound is Θ(N2). Previous attempts to protect against the worst case by improving the way quicksort chooses pivot elements for partitioning have increased the average computing time too much – one might as well use heapsort, which has a Θ(N log N) worst-case time bound, but is on the average 2–5 times slower than quicksort. A similar dilemma exists with selection algorithms (for finding the i-th largest element) based on partitioning. This paper describes a simple solution to this dilemma: limit the depth of partitioning, and for subproblems that exceed the limit switch to another algorithm with a better worst-case bound. Using heapsort as the ‘stopper’ yields a sorting algorithm that is just as fast as quicksort in the average case, but also has an Θ(N log N) worst case time bound. For selection, a hybrid of Hoare's FIND algorithm, which is linear on average but quadratic in the worst case, and the Blum–Floyd–Pratt–Rivest–Tarjan algorithm is as fast as Hoare's algorithm in practice, yet has a linear worst-case time bound. Also discussed are issues of implementing the new algorithms as generic algorithms, and accurately measuring their performance in the framework of the C+:+ Standard Template Library. ©1997 by John Wiley \& Sons, Ltd.},
year = {1997}
}

@book{knuth1968art,
  title={The Art of Computer Programming: Sorting and searching},
  author={Knuth, E.K. and Varga, R.S. and Knuth, D.E. and Harrison, M.A.},
  isbn={9780201038033},
  lccn={67026020},
  series={Addison-Wesley series in computer science and information processing},
  url={https://books.google.ie/books?id=ZQu9mgEACAAJ},
  year={1968},
  publisher={Addison-Wesley Publishing Company}
}
